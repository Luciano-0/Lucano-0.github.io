<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于校园的一些碎片</title>
    <url>/2020/01/01/photo/20200101-school/</url>
    <content><![CDATA[<img data-src="/image/4-1.jpg" alt="天台" style="zoom:16%;"/>

<a id="more"></a>

<img data-src="/image/4-2.jpg" alt="红黄蓝" style="zoom:30%;"/>

<img data-src="/image/4-4.jpg" alt="最爱玉泉午后的光影" style="zoom:30%;"/>

<img data-src="/image/4-5.jpg" alt="玉泉某个角落" style="zoom:30%;"/>

<img data-src="/image/4-6.jpg" alt="不知道是什么楼" style="zoom:30%;"/>

<img data-src="/image/4-7.jpg" alt="祖国万岁" style="zoom:30%;"/>

<img data-src="/image/4-8.jpg" alt="请爱护光缆" style="zoom:30%;"/>

<img data-src="/image/4-9.jpg" alt="紫金港的鹅鹅鹅" style="zoom:16%;"/>

<img data-src="/image/4-10.jpg" alt="你瞅啥" style="zoom:16%;"/>]]></content>
      <tags>
        <tag>photos</tag>
        <tag>胶片</tag>
      </tags>
  </entry>
  <entry>
    <title>山河满目，既往不咎</title>
    <url>/2020/01/10/photo/20200110-WestLake/</url>
    <content><![CDATA[<p>2019年最后一天，于西湖。</p>
<img data-src="/image/6-1.jpg" alt=" " style="zoom:30%;"/>

<a id="more"></a>

<img data-src="/image/6-2.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/6-3.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/6-4.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/6-5.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/6-6.jpg" alt=" " style="zoom:30%;"/>]]></content>
      <tags>
        <tag>photos</tag>
        <tag>胶片</tag>
      </tags>
  </entry>
  <entry>
    <title>月亮碎了，于是星星亮了</title>
    <url>/2020/04/30/photo/20200430-star/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>手牵手一步两步三步四步望着天    </p>
<p>看星星一颗两颗三颗四颗连成线</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<img data-src= "/image/2-1.jpg" alt="1" style="zoom:16%;"/>

<a id="more"></a>

<img data-src= "/image/2-2.jpg" alt="2" style="zoom:16%;"/>

<img data-src= "/image/2-3.jpg" alt="3" style="zoom:16%;"/>

<img data-src= "/image/2-4.jpg" alt="4" style="zoom:16%;"/>

<img data-src= "/image/2-5.jpg" alt="5" style="zoom:16%;"/>

<img data-src= "/image/2-6.jpg" alt="6" style="zoom:16%;"/>

]]></content>
      <tags>
        <tag>photos</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业那些事</title>
    <url>/2020/10/11/photo/20200630-graduate/</url>
    <content><![CDATA[<p>毕业，在杭州的雨季中悄然而至。</p>
<p>2020年的毕业季，号称史上最难毕业季。疫情之下，校园紧闭，连最后的相聚也显得格外仓促。</p>
<a id="more"></a>

<p>雨后的校园，就会长出三三两两的穿着学位服拍照的人们，趁着一两片弥足珍贵的阳光，定格校园中最后的时光。</p>
<img data-src="/image/1-1.jpg" alt="最后一课" style="zoom:16%;"/>

<p>平日里，我是一个没心没肺的人，但到了离别的时候，总想着，让时间过得再慢一些，还想和这些可爱的人儿多说一些话。</p>
<p>高中毕业时，似乎内心全乎是高考结束的欣喜，全然没有离别的伤感。大概是因为喜欢的人还在身边，要好的哥们还住对面，大家奔赴五湖四海，但我们来自同一个地方，相聚还容易。</p>
<p>但今时不同往日。或许是因为我们来自五湖四海，匆匆四年又即将奔赴五湖四海，又或许，是因为自己也即将离开熟悉的城市，成为异乡人。</p>
<p>在未来的某一刻，可能会突然意识到，有些人，此刻说了再见，这辈子就真的再也不见了。</p>
<img data-src="/image/1-2.jpg" alt="毕业前再去瞅瞅西湖" style="zoom:25%;"/>

<p>我们不能奢求有人可以一直陪我们走下去，有些人出现，就是在人生中陪我们走一段，这一段我们一起过得精彩，就足矣。<br>岁月匆匆，惟愿总相逢。</p>
]]></content>
      <tags>
        <tag>photos</tag>
      </tags>
  </entry>
  <entry>
    <title>故乡</title>
    <url>/2020/10/11/photo/20201005-hometown/</url>
    <content><![CDATA[<p>故乡，大概是写在每个人灵魂最深处的底层代码。</p>
<p>越长大，在家的日子就越少。曾经熟悉的地方，那些个常去的影院，洒过汗水的球场，躲过雨的屋檐，一不留神就变了模样，甚至，一晃眼就成了一片废墟，再也回不来了。</p>
<p>这小小的一方城池啊，承载着太多回忆。因为这片土地上有我们在意的人儿，发生过许许多多与我们有关的事，这土地上的钢筋混凝土才有了温度，被我们惦记着，并亲切地称之为故乡。</p>
<a id="more"></a>

<img data-src="/image/3-1.jpg" alt="1" style="zoom:30%;"/>

<img data-src="/image/3-2.jpg" alt="2" style="zoom:30%;"/>

<img data-src="/image/3-3.jpg" alt="3" style="zoom:30%;"/>    

<img data-src="/image/3-4.jpg" alt="4" style="zoom:30%;"/>

<img data-src="/image/3-5.jpg" alt="5" style="zoom:30%;"/>

<img data-src="/image/3-6.jpg" alt="6" style="zoom:30%;"/>

<img data-src="/image/3-7.jpg" alt="7" style="zoom:30%;"/>

<img data-src="/image/3-8.jpg" alt="8" style="zoom:30%;"/>]]></content>
      <tags>
        <tag>photos</tag>
        <tag>胶片</tag>
      </tags>
  </entry>
  <entry>
    <title>那些年追过的展（持续更新）</title>
    <url>/2020/10/31/photo/20201031-gallery/</url>
    <content><![CDATA[<img data-src="/image/5-1.jpg" alt="🌊" style="zoom:30%;"/>

<a id="more"></a>

<img data-src="/image/5-2.jpg" alt="早安打工人！" style="zoom:30%;"/>

<img data-src="/image/5-3.jpg" alt="西岸美术馆的长梯" style="zoom:30%;"/>

<img data-src="/image/5-4.jpg" alt="Wheel" style="zoom:30%;"/>

<img data-src="/image/5-5.jpg" alt="Plane" style="zoom:30%;"/>

<img data-src="/image/5-6.jpg" alt="月食" style="zoom:30%;"/>

<img data-src="/image/5-7.jpg" alt="最美二叉树？" style="zoom:30%;"/>]]></content>
      <tags>
        <tag>photos</tag>
      </tags>
  </entry>
  <entry>
    <title>追夕阳的日子</title>
    <url>/2020/10/31/photo/20201031-sun/</url>
    <content><![CDATA[<p>秋分一过，白天以肉眼可见的速度缩短。平日里七点下班，只能和星星月亮打个照面。</p>
<p>可幸的是，今年的秋天格外长，西伯利亚的寒风迟迟没有吹来，好让我有足够多的时间去感受秋日午后的温柔。</p>
<img data-src="/image/7-1.jpg" alt=" " style="zoom:30%;"/>

<a id="more"></a>

<p>揣上相机，骑个单车，打开杰伦的歌单列表循环，去把陌生城市的大街小巷都溜达一遍。</p>
<img data-src="/image/7-2.jpg" alt=" " style="zoom:30%;"/>

<p>过了三点，太阳也开始打盹，像极了下班前提前开始摸鱼的我们。阳光渐渐向着长波段偏移，这时，情况就变得焦急起来。 光影瞬息万变， 每一次快门可不再像原来那么从容。</p>
<img data-src="/image/7-3.jpg" alt=" " style="zoom:40%;"/>

<img data-src="/image/7-4.jpg" alt=" " style="zoom:30%;"/>

<p>最后一缕阳光总是最珍贵的，向着西边的方向，以高中时赶早自习的速度，去追赶那一片在高楼间透出来的夕阳。不过，追不上也没有关系，看到那渐变的天空吗，那是老天爷对勤奋小孩额外的馈赠。</p>
<img data-src="/image/7-5.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/7-6.jpg" alt=" " style="zoom:30%;"/>

<p>想起高中作文里常写的老套的句子：看日出日落，云卷云舒。没想到在退休前还有机会过一段这样的日子，没有眼前的苟且，也没有诗和远方。但我自由自在，做着自己喜欢的事，在进步的同时还能有时间可以浪费。</p>
<img data-src="/image/7-7.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/7-8.jpg" alt=" " style="zoom:30%;"/>

<p>我永这会记得那个追着夕阳跑的少年，那份中二的浪漫，且珍惜。</p>
]]></content>
      <tags>
        <tag>photos</tag>
        <tag>胶片</tag>
      </tags>
  </entry>
  <entry>
    <title>下一站，南京东路站</title>
    <url>/2021/02/23/photo/20210223-TheBond/</url>
    <content><![CDATA[<img data-src="/image/8-1.jpg" alt=" " style="zoom:30%;"/>

<a id="more"></a>

<img data-src="/image/8-2.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-3.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-4.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-5.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-6.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-7.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-8.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-9.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-10.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-11.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-12.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/8-13.jpg" alt=" " style="zoom:30%;"/>]]></content>
      <tags>
        <tag>photos</tag>
        <tag>胶片</tag>
      </tags>
  </entry>
  <entry>
    <title>今日营业</title>
    <url>/2021/03/07/photo/20210307-Portrait/</url>
    <content><![CDATA[<img data-src="/image/9-1.jpg" alt=" " style="zoom:30%;"/>

<a id="more"></a>

<img data-src="/image/9-2.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-3.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-4.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-5.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-6.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-7.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-8.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-9.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-10.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-11.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-12.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-13.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/9-14.jpg" alt=" " style="zoom:30%;"/>]]></content>
      <tags>
        <tag>photos</tag>
        <tag>人像</tag>
      </tags>
  </entry>
  <entry>
    <title>今日：阴有阵雨</title>
    <url>/2021/02/28/photo/20210228-RainyShangHai/</url>
    <content><![CDATA[<img data-src="/image/10-7.jpg" alt=" " style="zoom:30%;"/>

<a id="more"></a>

<img data-src="/image/10-1.JPG" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-2.JPG" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-3.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-4.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-5.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-6.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-8.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-9.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-10.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-11.jpg" alt=" " style="zoom:30%;"/>

<img data-src="/image/10-12.jpg" alt=" " style="zoom:30%;"/>

]]></content>
      <tags>
        <tag>photos</tag>
      </tags>
  </entry>
  <entry>
    <title>DoTween</title>
    <url>/2020/09/15/tech/DoTween/</url>
    <content><![CDATA[<h1 id="1-Introdution"><a href="#1-Introdution" class="headerlink" title="1. Introdution"></a>1. Introdution</h1><a id="more"></a>

<h1 id="2-Function"><a href="#2-Function" class="headerlink" title="2. Function"></a>2. Function</h1><h2 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a><strong>Transform</strong></h2><p><code>transform.Func()</code></p>
<h3 id="position"><a href="#position" class="headerlink" title="position"></a>position</h3><ul>
<li><code>DOMove(Vector3 target, float time)</code></li>
<li><code>DOLocalMove()</code></li>
<li><code>DOPunchPosition()</code></li>
</ul>
<h3 id="rotation"><a href="#rotation" class="headerlink" title="rotation"></a>rotation</h3><ul>
<li><code>DORotate()</code></li>
<li><code>DOLocalRotate()</code></li>
<li><code>DORotateQuaternion()</code></li>
<li><code>DOLookat()</code></li>
<li><code>DOPunchRotation()</code></li>
</ul>
<h3 id="scale"><a href="#scale" class="headerlink" title="scale"></a>scale</h3><ul>
<li><code>DOScale()</code></li>
<li><code>DOPunchScale()</code></li>
</ul>
<h3 id="other"><a href="#other" class="headerlink" title="other"></a>other</h3><ul>
<li><code>DOShakePosition()</code>：常用于相机的振动效果</li>
</ul>
<h3 id="blend"><a href="#blend" class="headerlink" title="blend"></a>blend</h3><ul>
<li>如果同时执行两个<code>DOMove()</code>，则前一个会被覆盖，这时需要使用动画混合</li>
<li>实现增量控制</li>
<li><code>DOBlendableMoveBy()</code></li>
<li><code>DOBlendablePunchRotation()</code></li>
</ul>
<h2 id="Material"><a href="#Material" class="headerlink" title="Material"></a><strong>Material</strong></h2><p><code>Material material = GetComponent&lt;MeshRenderer&gt;().material;</code></p>
<p><code>material.Func()</code></p>
<h3 id="color"><a href="#color" class="headerlink" title="color"></a>color</h3><ul>
<li><code>DOColor()</code>：传颜色属性名字</li>
<li><code>DOGradientColor()</code>：渐变颜色动画</li>
</ul>
<h3 id="alpha"><a href="#alpha" class="headerlink" title="alpha"></a>alpha</h3><ul>
<li><p><code>DOColor(Color.clear, time)</code>：通过改变颜色的透明度改变物体透明度</p>
</li>
<li><p><code>DOFade()</code></p>
</li>
</ul>
<h3 id="other-1"><a href="#other-1" class="headerlink" title="other"></a>other</h3><ul>
<li><code>DOOffset()</code>：动态改变uv坐标，可用于特效，如武器流光</li>
<li><code>DOVector()</code>：改变任意material四维向量值</li>
<li><code>DOBlendableColor()</code>：颜色混合</li>
</ul>
<h1 id="3-Tips"><a href="#3-Tips" class="headerlink" title="3. Tips"></a>3. Tips</h1><ul>
<li>函数命名与功能相关，每一类命名都有关键词</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>效率工具备忘录</title>
    <url>/2021/03/11/tech/EfficiencyTool/</url>
    <content><![CDATA[<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul>
<li><a href="http://www.1218.io/">Seer</a> 实现类似Mac OS下空格预览文件的功能。</li>
<li><a href="https://www.islide.cc/">iSlide</a> 基于PPT的插件工具，包含查找模板、图片、图标素材、设计配色、页面布局、智能优化等功能。</li>
<li><a href="https://everything.en.softonic.com/">Everything</a> 全局文件搜索</li>
<li><a href="http://www.wox.one/">Wox</a> 实现类似Mac OS下Spot Light的功能，搭配Everything食用更佳。</li>
<li><a href="https://github.com/microsoft/PowerToys/releases">PowerToys</a> 微软开发的开源效率工具，支持快速修改图片分辨率、批量文件重命名、Wox的大部分功能(暂时不支持与Everything配合使用)。<a href="https://docs.microsoft.com/zh-cn/windows/powertoys/">Microsoft PowerToys | Microsoft Docs</a></li>
<li><a href="https://www.typora.io/">Typora</a> 用过颜值最高的Markdown编辑器。</li>
</ul>
<a id="more"></a>

<h3 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title="Mac OS"></a>Mac OS</h3><ul>
<li><strong>Bob</strong> 全局翻译软件</li>
<li><strong>MonitorControl</strong> 控制显示器亮度</li>
<li><strong>超级右键</strong> 右键菜单工具</li>
<li><strong>Xnip</strong> 截图工具，支持滚动截图</li>
<li><strong>Unsplash Wallpapers</strong> 壁纸</li>
<li><strong>Cheat Sheet</strong> 快捷键查看工具</li>
<li><strong>Keka</strong> 解压工具</li>
<li><strong>Tencent Lemon</strong> 管家</li>
<li><strong>Mos</strong> 鼠标优化</li>
<li><strong>Rectangle</strong> 窗口调整工具</li>
</ul>
<h3 id="Edge-Chrome插件"><a href="#Edge-Chrome插件" class="headerlink" title="Edge/Chrome插件"></a>Edge/Chrome插件</h3><ul>
<li><a href="https://microsoftedge.microsoft.com/addons/detail/adblock-%E2%80%94-%E6%9C%80%E4%BD%B3%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%B7%A5%E5%85%B7/ndcileolkflehcjpmjnfbnaibdcgglog">AdBlock</a></li>
<li><a href="https://microsoftedge.microsoft.com/addons/detail/infinity-%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5-pro/hajlmbnnniemimmaehcefkamdadpjlfa">Infinity 新标签页 (Pro)</a></li>
<li><a href="https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd">Tampermonkey</a></li>
<li><a href="">Imagus</a> 图片预览</li>
</ul>
<h3 id="JetBrains插件"><a href="#JetBrains插件" class="headerlink" title="JetBrains插件"></a>JetBrains插件</h3><ul>
<li><strong>Translation</strong> 翻译工具</li>
<li><strong>Nyan Progress Bar</strong> 彩虹猫进度条</li>
<li><strong>GitToolBox</strong> Git工具</li>
<li><strong>Chinese(Simplified) Language Pack EAP</strong> 汉化包</li>
<li><strong>CodeGlance</strong> 代码预览滚动条</li>
<li><strong>Background Image Plus</strong> 设置IDE背景</li>
<li><strong>Leetcode editor</strong> IDE刷Leetcode神器</li>
<li><strong>AIXcoder Code Completer</strong> 代码补全工具</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Lua小技巧及语法糖记录</title>
    <url>/2020/10/27/tech/Lua-1/</url>
    <content><![CDATA[<p>在Lua的学习过程中，发现有许多特别或是巧妙的语法，特在此记录。</p>
<p>参考书籍：<a href="https://book.douban.com/subject/30262035/">《Lua程序设计（第4版）》</a></p>
<a id="more"></a>

<h4 id="注释代码"><a href="#注释代码" class="headerlink" title="注释代码"></a>注释代码</h4><p>Lua中使用<code>--</code>表示单行注释，<code>--[[ 多行长注释 ]]</code>表示多行长注释，在注释代码时，常见的技巧是将代码放入<code>--[[</code> 和 <code>--]]</code>之间，如：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">print(10)</span></span><br><span class="line"><span class="comment">--]]</span></span><br></pre></td></tr></table></figure>

<p>当需要重新启用这段代码时只需要在第一行行首添加一个连字符。</p>
<h4 id="逻辑运算and、or"><a href="#逻辑运算and、or" class="headerlink" title="逻辑运算and、or"></a>逻辑运算and、or</h4><ul>
<li><p>and：如果第一个操作数为”false”，则返回第一个操作数，否则返回第二个操作数。</p>
</li>
<li><p>or：如果第一个操作数不为”false”，则返回第一个操作数，否则返回第二个操作数。</p>
</li>
<li><p>and和or都遵循短路求值。</p>
</li>
<li><p>形如<code>x=x or v</code>的写法非常有用，等价于<code>if not x the x=v end</code></p>
</li>
<li><p>形如<code>(a and b or c)</code>，当b不为false时，等价于C语言中的三目运算符<code>a ? b : c</code></p>
</li>
</ul>
<h4 id="取模运算"><a href="#取模运算" class="headerlink" title="取模运算"></a>取模运算</h4><p><code>x-x%0.01</code>表示x保留两位小数的结果。</p>
<h4 id="全局变量本质为表"><a href="#全局变量本质为表" class="headerlink" title="全局变量本质为表"></a>全局变量本质为表</h4><p>Lua语言使用表来储存全局变量，未经初始化的表元素为nil，将nil赋值给表元素可以将它删除，这样的操作对全局变量同样适用。</p>
<h4 id="a-name和a-name-和a-quot-name-quot"><a href="#a-name和a-name-和a-quot-name-quot" class="headerlink" title="a.name和a[name]和a[&quot;name&quot;]"></a><code>a.name</code>和<code>a[name]</code>和<code>a[&quot;name&quot;]</code></h4><ul>
<li><p>当把表当作结构体用时，可以把索引当作成员名称使用，因此<code>a.name</code>等价于<code>a[&quot;name&quot;]</code>，在Lua中，这两种形式自由混用。</p>
</li>
<li><p>但对于阅读程序的人而言，两种形式代表了不同的意图，点分式说明当前表被当作结构体使用，此时表实际上是由固定的、预先定义的键组成的集合；而字符串索引形式说明表可以使用任意字符作为键，并且处于某种原因我们操作的是指定键。</p>
</li>
<li><p>而<code>a.x</code>和<code>a[x]</code>是不等价的，不能搞混。</p>
</li>
</ul>
<h4 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h4><ul>
<li>所有元素不为nil的数组称之为序列，Lua提供了获取序列长度的操作符#</li>
<li>对于中间存在空洞的列表而言，序列长度操作符是不可靠的。</li>
<li>准确地说，序列是由指定的n个正整数值类型的键所组成的集合{1,2,…,n}形成的表。</li>
</ul>
<h4 id="遍历表"><a href="#遍历表" class="headerlink" title="遍历表"></a>遍历表</h4><ul>
<li><code>pairs()</code>：遍历顺序随机，相同程序在不同时间运行也可能产生不同的结果，但每个元素会出现一次。</li>
<li><code>ipairs()</code>：按顺序遍历。</li>
<li>使用数值型for循环。</li>
</ul>
<h4 id="函数语法糖"><a href="#函数语法糖" class="headerlink" title="函数语法糖"></a>函数语法糖</h4><ul>
<li><p>当函数只有一个参数且该参数是字符串常量或是表构造器时，括号可省略。</p>
</li>
<li><p>Lua语言为面向对象风格的调用提供了一种特殊的语法，<code>o:foo(x)</code>，即调用对象o的foo方法。</p>
</li>
<li><p>调用函数时使用的参数个数可以与定义函数时使用的参数个数不一致，Lua语言会通过抛弃多余的参数和将参数设为nil来调整参数的个数。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>Lua</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏中的运动补偿</title>
    <url>/2020/11/22/tech/MotionCompensation/</url>
    <content><![CDATA[<h2 id="玩家角色的客户端预测与服务器对账"><a href="#玩家角色的客户端预测与服务器对账" class="headerlink" title="玩家角色的客户端预测与服务器对账"></a>玩家角色的客户端预测与服务器对账</h2><h3 id="问题来源"><a href="#问题来源" class="headerlink" title="问题来源"></a>问题来源</h3><ul>
<li><p>在多人游戏中，外挂作弊不只是让自己的游戏体验更好，还会让其他玩家的游戏体验更差，因此在开发过程中需要避免这种情况的发生。</p>
</li>
<li><p><strong>权威服务器和哑客户端</strong>：为处理外挂问题，游戏中的逻辑通常只由服务器处理，客户端只负责显示，一切以服务器为准。</p>
</li>
<li><p>此方案在慢节奏的游戏中运行良好，但遇到快速刷新的游戏就要考虑网络延迟的问题。比如考虑一个实际场景，客户端发出指令向前运动一米，指令需要传给服务器（花费100 ms），服务器处理后返回角色运动一米后所在的位置（花费100 ms），再由客户端在画面上表现出来。因此在玩家发出指令后将在200 ms内游戏画面没有任何变化然后突然向前运动了一米。这种滞后对游戏来说当然是灾难性的。</p>
<a id="more"></a>

</li>
</ul>
<h3 id="客户端预测"><a href="#客户端预测" class="headerlink" title="客户端预测"></a>客户端预测</h3><ul>
<li>通常游戏世界是具有足够确定性的，即给定一个游戏状态和一组输入，结果是完全可预测的。因此基于此确定性，我们可以在客户端发出指令之后在等待服务器回应期间就开始呈现效果，这样既保证了服务器的权威性，又能消除表现上的割裂感。</li>
<li>以上方案看似已经完美解决了问题，但考虑一下当玩家的连续操作时间间隔小于网络延迟的时候就会出现问题。比如：玩家连续按下两次向前移动一米的操作，移动所需时间为100 ms，但网络延迟有250 ms，这就会导致在200 ms时角色在前进两米的位置，但250 ms时收到服务器的第一次消息强制更新回到前进一米的位置，而在350 ms时又会更新到前进两米的位置。这一问题就需要服务器对账来解决。</li>
</ul>
<h3 id="服务器对账"><a href="#服务器对账" class="headerlink" title="服务器对账"></a>服务器对账</h3><ul>
<li>在客户端向服务器发送请求时加入一个序号，当服务器回复时，包括它处理的最后一个序号。借此客户端可以根据服务器发送的最后一个权威的状态以及服务器未处理的输入计算游戏当前的状态。</li>
</ul>
<h2 id="多人游戏其他玩家：实体插值和滞后补偿"><a href="#多人游戏其他玩家：实体插值和滞后补偿" class="headerlink" title="多人游戏其他玩家：实体插值和滞后补偿"></a>多人游戏其他玩家：实体插值和滞后补偿</h2><h3 id="多人游戏带来的新问题"><a href="#多人游戏带来的新问题" class="headerlink" title="多人游戏带来的新问题"></a>多人游戏带来的新问题</h3><ul>
<li><strong>服务器时间步进</strong>：当有多个客户端同时高频次地向服务器发送请求时，每次输入都更新游戏世界会消耗太多的CPU和带宽，因此通常会对客户端的输入进行排队，设置一个服务器步进时间，如100 ms，在该时间段内对所有收到的操作进行统一处理并广播给客户端。</li>
<li><strong>客户端处理低频更新</strong>：对于玩家自己控制的角色来说处理和前文所述基本一致，能靠预测填充服务器两次消息间信息的空白，但是对于其他玩家控制的角色来说，获得的信息就会比较稀疏，如何在数据有限的情况下对其他玩家控制角色的运动进行平滑就是新的问题。</li>
</ul>
<h3 id="Dead-reckoning-死亡计算"><a href="#Dead-reckoning-死亡计算" class="headerlink" title="Dead reckoning 死亡计算"></a>Dead reckoning 死亡计算</h3><ul>
<li><p>在某些游戏如赛车游戏中，客户端可以获取权威的速度、加速度等运动参数，在下一次服务器数据到来之前，假设在此期间汽车不发生运动参数的突变（如发生碰撞、用户输入等），客户端根据当前参数预测汽车的运动，在服务器数据到来之后进行更正。</p>
</li>
<li><p><strong>限制：</strong>在某些情况下，死亡计算完全无法使用，例如在射击游戏中，玩家的方向和速度是可以立刻改变的，此时，玩家以较高的频率和飞快的速度进行转向、加速、停止，因此，完全无法根据当前的运动参数预测接下来的运动。</p>
</li>
</ul>
<h3 id="实体插值"><a href="#实体插值" class="headerlink" title="实体插值"></a>实体插值</h3><ul>
<li>另一种解决方法是实体插值，例如，在t=1000 ms时，客户端已经收到了来自服务器t=900 ms和t=1000 ms的可靠数据，在1000 ms到1100 ms期间，客户端就显示对900 ms和1000 ms插值之后的数据。在此种解决方案下，插值获得的显示效果是流畅且足够准确的，唯一的问题是客户端显示的是100 ms前的数据。 </li>
</ul>
<h3 id="滞后补偿"><a href="#滞后补偿" class="headerlink" title="滞后补偿"></a>滞后补偿</h3><ul>
<li><strong>最后需要解决一个问题：</strong>实体插值带来的延迟。当下，玩家看到的实际是自己当前的位置状态和100 ms前其他玩家的位置状态。在某些情况下，这100 ms的延迟也是致命的，如：你向着敌人开枪，但你瞄准的实际上是100 ms前的敌人，此时敌人的位置已经不在你看到的位置。</li>
<li><strong>解决方案：</strong>当玩家按下射击按钮时，客户端会向服务器发送当前事件，包含准确的时间戳和目标。服务器接收到数据后会根据时间戳重建过去的世界，处理射击的结果并发送给客户端。唯一的问题是敌人有可能在掩体后被杀，因为他实际上是在100 ms前运动到掩体前被杀的，但做了延迟处决。</li>
</ul>
<p>参考：</p>
<p><a href="https://www.gabrielgambetta.com/client-server-game-architecture.html">Client Server Game Architecture</a></p>
<p><a href="https://developer.valvesoftware.com/wiki/Latency_Compensating_Methods_in_Client/Server_In-game_Protocol_Design_and_Optimization#Game_Design_Implications_of_Lag_Compensation">Latency Compensating Methods in Client/Server In-game Protocol Design and Optimization</a></p>
]]></content>
      <tags>
        <tag>Game</tag>
      </tags>
  </entry>
  <entry>
    <title>一种拨轮动效</title>
    <url>/2020/09/28/tech/TimeWidget/</url>
    <content><![CDATA[<p>实现了一种拨轮动画效果，可以用于游戏中的倒计时、数值显示等。目前实现了初始化的动画效果。</p>
<a id="more"></a>

<p><video src="/image/TimeWidget.mov" controls="controls" style="max-width: 50%; display: block; margin-left: auto; margin-right: auto;"> your browser does not support the video tag </video></p>
<p><a href="https://github.com/Luciano-0/TimeWidget">Github地址</a></p>
]]></content>
      <tags>
        <tag>Unity</tag>
        <tag>C#</tag>
        <tag>动效</tag>
      </tags>
  </entry>
  <entry>
    <title>初见Processing</title>
    <url>/2020/10/18/tech/Processing-1/</url>
    <content><![CDATA[<h2 id="新大陆"><a href="#新大陆" class="headerlink" title="新大陆"></a>新大陆</h2><p>前几天开始看 Daniel Shiffman的<a href="https://book.douban.com/subject/26264736/">《代码本色：用编程模拟自然系统》</a>，接触到了Processing这种编程语言，就像发现了新大陆。Processing号称为艺术而生的语言，确实，从使用体验到运行效果，都能透露出一份独特的优雅。</p>
<a id="more"></a>

<p>Processing设计的思路就是使用图形化替代原来的命令行，正是这种初衷赋予了这门语言生命，编写几行简单的代码，点击运行按钮就能看到生动的演示效果。</p>
<p>在使用体验上，Processing简单但不简陋，下载后直接打开就能进行编程，不需要复杂的配置环境过程。窗口有点类似单片机的编程，而编程体验类似于Python，且由于开放的社区环境，有许多功能强大的扩展包可以安装。</p>
<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul>
<li><a href="https://processing.org/">官网</a></li>
<li><a href="http://iprocessing.cn/%E6%96%87%E6%A1%A3/">文档</a></li>
<li>社区：<a href="https://www.openprocessing.org/">OpenProcessing</a> / <a href="http://iprocessing.cn/">Processing编程艺术</a></li>
<li>书籍：<a href="https://book.douban.com/subject/3143256/">Learning Processing</a> / <a href="https://book.douban.com/subject/20452058/">The Nature of Code</a></li>
</ul>
<h2 id="一个小尝试"><a href="#一个小尝试" class="headerlink" title="一个小尝试"></a>一个小尝试</h2><p>迫不及待就仿照书中的例程编写了一个简单的Demo，模拟的是多个小球与中间大球之间的引力作用。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Mover[] movers = new Mover[<span class="number">2000</span>];</span><br><span class="line">Attractor a;</span><br><span class="line"></span><br><span class="line">void setup() &#123;</span><br><span class="line">	size(<span class="number">1600</span>, <span class="number">900</span>);</span><br><span class="line">	<span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; movers.length; i++) &#123;</span><br><span class="line">	movers[i] = new Mover();</span><br><span class="line">	&#125;</span><br><span class="line">	a = new Attractor();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void draw() &#123;</span><br><span class="line">	background(<span class="number">50</span>);</span><br><span class="line">	<span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; movers.length; i++) &#123;</span><br><span class="line">	PVector force = a.attract(movers[i]);</span><br><span class="line">	movers[i].applyForce(force);</span><br><span class="line">	movers[i].update();</span><br><span class="line">	movers[i].display();</span><br><span class="line">	&#125;</span><br><span class="line">	//a.display();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Mover &#123;</span><br><span class="line">	PVector location;</span><br><span class="line">	PVector velocity;</span><br><span class="line">	PVector acceleration;</span><br><span class="line">	float mass;</span><br><span class="line">	color mycolor;</span><br><span class="line">	</span><br><span class="line">	Mover() &#123;</span><br><span class="line">	location = new PVector(random(width / <span class="number">4</span>, width * <span class="number">3</span> / <span class="number">4</span>), random(height / <span class="number">4</span>, height * <span class="number">3</span> / <span class="number">4</span>));        </span><br><span class="line">	mass = random(<span class="number">0.5</span>, <span class="number">1</span>);</span><br><span class="line">	velocity = new PVector(random(<span class="number">0</span>, <span class="number">1</span>), random(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">	mycolor = color(<span class="number">200</span>, random(<span class="number">0</span>, <span class="number">200</span>), random(<span class="number">0</span>, <span class="number">200</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	void update() &#123;</span><br><span class="line">	velocity.add(acceleration);</span><br><span class="line">	location.add(velocity);</span><br><span class="line">	acceleration.mult(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	void display() &#123;</span><br><span class="line">	stroke(<span class="number">0</span>);</span><br><span class="line">	fill(mycolor);</span><br><span class="line">	ellipse(location.x, location.y, mass * <span class="number">16</span>, mass * <span class="number">16</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	void applyForce(PVector force) &#123;</span><br><span class="line">	acceleration = force;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Attractor &#123;</span><br><span class="line">	float mass;</span><br><span class="line">	PVector location;</span><br><span class="line">	float G;</span><br><span class="line">	</span><br><span class="line">	Attractor() &#123;</span><br><span class="line">	location = new PVector(width / <span class="number">2</span>, height / <span class="number">2</span>);</span><br><span class="line">	mass = <span class="number">50</span>;</span><br><span class="line">	G = <span class="number">5</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	PVector attract(Mover m) &#123;</span><br><span class="line">	PVector force = PVector.sub(location, m.location);</span><br><span class="line">	float distance = force.mag();</span><br><span class="line">	distance = constrain(distance, <span class="number">10</span>, <span class="number">40</span>); //限制两者之间的距离</span><br><span class="line">	force.normalize();</span><br><span class="line">	float strength = (G * mass * m.mass) / (distance * distance);</span><br><span class="line">	force.mult(strength);</span><br><span class="line">	<span class="keyword">return</span> force;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	void display() &#123;</span><br><span class="line">	stroke(<span class="number">0</span>);</span><br><span class="line">	fill(<span class="number">255</span>);</span><br><span class="line">	ellipse(location.x, location.y, mass * <span class="number">2</span>, mass * <span class="number">2</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>作为一个重度“颜控”的程序员，热衷于实现一些炫酷、优雅或是有趣的视觉效果。Processing非常契合我的需求。之后会深入学习，争取做一些有意思的作品。</p>
]]></content>
      <tags>
        <tag>Processing</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/09/12/tech/hello-world/</url>
    <content><![CDATA[<p>Hello World！</p>
]]></content>
  </entry>
  <entry>
    <title>Anconda常用命令</title>
    <url>/2020/09/12/tech/text/</url>
    <content><![CDATA[<ul>
<li>conda当前版本</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda -V</span><br></pre></td></tr></table></figure>

<ul>
<li>列举当前安装的包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<ul>
<li>conda基本信息</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda info</span><br></pre></td></tr></table></figure>

<ul>
<li>当前存在的虚拟环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure>

<ul>
<li>检查更新</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure>

<ul>
<li>创建虚拟环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda create --name your_env_name python&#x3D;3.7</span><br></pre></td></tr></table></figure>

<ul>
<li>激活虚拟环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda activate your_env_name</span><br></pre></td></tr></table></figure>

<ul>
<li>关闭虚拟环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>

<ul>
<li>安装包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install package_name</span><br></pre></td></tr></table></figure>

<ul>
<li>删除包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda remove package_name</span><br></pre></td></tr></table></figure>

<ul>
<li>删除虚拟环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda remove --name your_env_name --all</span><br></pre></td></tr></table></figure>

<ul>
<li>添加源</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda config --add channel_urls</span><br></pre></td></tr></table></figure>

<ul>
<li>换回默认源</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda config --remove-key channels</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
